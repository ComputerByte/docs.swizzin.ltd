(window.webpackJsonp=window.webpackJsonp||[]).push([[5,15],{158:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),d=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=d(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=d(n),p=a,m=b["".concat(i,".").concat(p)]||b[p]||u[p]||o;return n?r.a.createElement(m,s(s({ref:t},l),{},{components:n})):r.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},159:function(e,t,n){"use strict";var a=n(0),r=n.n(a),o=n(162),i=n(161),s=n(57),c=n.n(s),l=37,d=39;t.a=function(e){var t=e.block,n=e.children,s=e.defaultValue,b=e.values,u=e.groupId,p=e.className,m=Object(o.a)(),h=m.tabGroupChoices,f=m.setTabGroupChoices,O=Object(a.useState)(s),v=O[0],y=O[1],g=Object(a.useState)(!1),j=g[0],w=g[1];if(null!=u){var N=h[u];null!=N&&N!==v&&b.some((function(e){return e.value===N}))&&y(N)}var k=function(e){y(e),null!=u&&f(u,e)},T=[],x=function(e){e.metaKey||e.altKey||e.ctrlKey||w(!0)},S=function(){w(!1)};return Object(a.useEffect)((function(){return window.addEventListener("keydown",x),window.addEventListener("mousedown",S),function(){window.removeEventListener("keydown",x),window.removeEventListener("mousedown",S)}}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t},p)},b.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":v===t,className:Object(i.a)("tabs__item",t,c.a.tabItem,{"tabs__item--active":v===t}),style:j?{}:{outline:"none"},key:t,ref:function(e){return T.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case d:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case l:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(T,e.target,e),x(e)},onFocus:function(){return k(t)},onClick:function(){k(t),w(!1)},onPointerDown:function(){return w(!1)}},n)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter((function(e){return e.props.value===v}))[0]))}},160:function(e,t,n){"use strict";var a=n(3),r=n(0),o=n.n(r);t.a=function(e){var t=e.children,n=e.hidden,r=e.className;return o.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:r}),t)}},174:function(e,t,n){"use strict";var a=n(3),r=n(0),o=n.n(r),i=n(187),s=n(22),c=n(171),l=n(175),d=n.n(l);t.a=function(e){var t=Object(s.default)().siteConfig.themeConfig.prism,n=void 0===t?{}:t,l=Object(r.useState)(!1),b=l[0],u=l[1];Object(r.useEffect)((function(){u(!0)}),[]);var p=Object(c.a)().isDarkTheme,m=n.theme,h=n.darkTheme||m,f=p?h:m,O=e.language,v=void 0===O?"bash":O,y=e.code;return o.a.createElement(i.a,Object(a.a)({},i.b,{code:y,language:v,key:b,theme:f}),(function(e){var t=e.className,n=e.style,a=e.tokens,r=e.getLineProps,i=e.getTokenProps;return o.a.createElement("pre",{className:t+" "+d.a.code,style:n},a.map((function(e,t){return o.a.createElement("div",r({line:e,key:t}),e.map((function(e,t){return o.a.createElement("span",i({token:e,key:t}))})))})))}))}},175:function(e,t,n){e.exports={code:"code_ddYG"}},56:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),o=(n(0),n(158)),i=n(159),s=n(160),c=n(163),l={},d={unversionedId:"snippets/systemdtabs",id:"snippets/systemdtabs",isDocsHomePage:!1,title:"systemdtabs",description:"<Tabs",source:"@site/docs/snippets/systemdtabs.mdx",slug:"/snippets/systemdtabs",permalink:"/snippets/systemdtabs",editUrl:"https://github.com/liaralabs/docs.swizzin.ltd/edit/master/docs/snippets/systemdtabs.mdx",version:"current"},b=[],u={toc:b};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("div",{className:"code"},Object(o.b)(i.a,{defaultValue:"start",values:[{label:"Status",value:"status"},{label:"Start",value:"start"},{label:"Stop",value:"stop"},{label:"Restart",value:"restart"},{label:"Enable",value:"enable"},{label:"Disable",value:"disable"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"status",mdxType:"TabItem"},Object(o.b)(c.a,{children:"sudo systemctl status "+n.service,className:"bash",mdxType:"CodeBlock"})),Object(o.b)(s.a,{value:"start",mdxType:"TabItem"},Object(o.b)(c.a,{children:"sudo systemctl start "+n.service,className:"bash",mdxType:"CodeBlock"})),Object(o.b)(s.a,{value:"stop",mdxType:"TabItem"},Object(o.b)(c.a,{children:"sudo systemctl stop "+n.service,className:"bash",mdxType:"CodeBlock"})),Object(o.b)(s.a,{value:"restart",mdxType:"TabItem"},Object(o.b)(c.a,{children:"sudo systemctl restart "+n.service,className:"bash",mdxType:"CodeBlock"})),Object(o.b)(s.a,{value:"enable",mdxType:"TabItem"},Object(o.b)(c.a,{children:"sudo systemctl enable "+n.service,className:"bash",mdxType:"CodeBlock"})),Object(o.b)(s.a,{value:"disable",mdxType:"TabItem"},Object(o.b)(c.a,{children:"sudo systemctl disable "+n.service,className:"bash",mdxType:"CodeBlock"})))))}p.isMDXComponent=!0},60:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),o=(n(0),n(158)),i=n(159),s=n(160),c=n(174),l={},d={unversionedId:"snippets/conn4arr",id:"snippets/conn4arr",isDocsHomePage:!1,title:"conn4arr",description:"To add a download client, go to Settings > Download Client. Make sure Advanced Settings are shown and click Add Client.",source:"@site/docs/snippets/conn4arr.mdx",slug:"/snippets/conn4arr",permalink:"/snippets/conn4arr",editUrl:"https://github.com/liaralabs/docs.swizzin.ltd/edit/master/docs/snippets/conn4arr.mdx",version:"current"},b=[],u={toc:b};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"To add a download client, go to ",Object(o.b)("inlineCode",{parentName:"p"},"Settings > Download Client"),". Make sure ",Object(o.b)("inlineCode",{parentName:"p"},"Advanced Settings")," are shown and click ",Object(o.b)("inlineCode",{parentName:"p"},"Add Client"),"."),Object(o.b)(i.a,{defaultValue:"rutorrent",values:[{label:"ruTorrent",value:"rutorrent"},{label:"Transmission",value:"transmission"},{label:"Deluge",value:"deluge"},{label:"nzbGet",value:"nzbget"},{label:"qBittorrent",value:"qbittorrent"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"rutorrent",mdxType:"TabItem"},Object(o.b)(c.a,{code:"Name: rTorrent\nrTorrent host: 127.0.0.1\nPort: 443\nURL Path: /rutorrent/plugins/httprpc/action.php\nUse SSL: ON\nUsername: <your username>\nPassword: <your password>\nAdd label to torrent: TV (or anything else you desire)\nOptional - Downloaded files location: <custom directory>",lang:"plaintext",mdxType:"CodeSnippet"})),Object(o.b)(s.a,{value:"transmission",mdxType:"TabItem"},Object(o.b)(c.a,{code:"To retrieve your port, please run `grep rpc-port ~/.config/transmission-daemon/settings.json`,\nwhen logged in as the user you want to use transmission of (i.e. not root).\n----------\nHost: 127.0.0.1\nPort: <See above, e.g. 9091>\nURL Base: /transmission/ (Should be default)\nUsername: <your username>\nPassword: <your password>\nCategory: <optional, e.g. Sonarr or TV>\nConnect using HTTPS: OFF",lang:"plaintext",mdxType:"CodeSnippet"})),Object(o.b)(s.a,{value:"deluge",mdxType:"TabItem"},Object(o.b)(c.a,{code:"Name: Deluge\nHost: 127.0.0.1\nPost: <deluge web port>\nDeluge Password: <your password>\nAdd label to torrent: TV (or anything else you desire)\n* label plugin must be enabled in Deluge if you add a label\nSSL: OFF",lang:"plaintext",mdxType:"CodeSnippet"})),Object(o.b)(s.a,{value:"nzbget",mdxType:"TabItem"},Object(o.b)(c.a,{code:"NZBget host: 127.0.0.1\nport: 443\nURL Base: nzbget\nConnect using HTTPS: ON\nnzbget username: <your username>\nnzbget Password: <your password>\nAdd label to torrent: Series (or anything else you desire)\n* label must exist under Categories in nzbGet",lang:"plaintext",mdxType:"CodeSnippet"})),Object(o.b)(s.a,{value:"qbittorrent",mdxType:"TabItem"},Object(o.b)(c.a,{code:"Name: qBittorrent\nHost: 127.0.0.1\nPost: <qbittorrent web port>\nUsername: <your username>\nPassword: <your password>\nCategory: TV (or anything else you desire)\nSSL: OFF",lang:"plaintext",mdxType:"CodeSnippet"}))))}p.isMDXComponent=!0},76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return d})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),o=(n(0),n(158)),i=(n(159),n(160),n(174),n(56)),s=n(60),c={id:"sonarr",title:'Sonarr v2 aka "Stable"',sidebar_label:"Sonarr v2"},l={unversionedId:"applications/sonarr",id:"applications/sonarr",isDocsHomePage:!1,title:'Sonarr v2 aka "Stable"',description:"Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",source:"@site/docs/applications/sonarr.mdx",slug:"/applications/sonarr",permalink:"/applications/sonarr",editUrl:"https://github.com/liaralabs/docs.swizzin.ltd/edit/master/docs/applications/sonarr.mdx",version:"current",sidebar_label:"Sonarr v2",sidebar:"docs",previous:{title:"Sickgear",permalink:"/applications/sickgear"},next:{title:'Sonarr v3 aka "Phantom"',permalink:"/applications/sonarrv3"}},d=[{value:"Initial Setup",id:"initial-setup",children:[]},{value:"How to Access",id:"how-to-access",children:[]},{value:"Service Management",id:"service-management",children:[]},{value:"Configuration",id:"configuration",children:[{value:"Add a new show (and your first root directory)",id:"add-a-new-show-and-your-first-root-directory",children:[]},{value:"Connect download clients",id:"connect-download-clients",children:[]},{value:"Add an indexer with Jackett",id:"add-an-indexer-with-jackett",children:[]},{value:"Other tasks",id:"other-tasks",children:[]}]},{value:"Switching between v2 and v3",id:"switching-between-v2-and-v3",children:[{value:"Upgrading to Sonarr v3",id:"upgrading-to-sonarr-v3",children:[]},{value:"Downgrading from Sonarr v3",id:"downgrading-from-sonarr-v3",children:[]}]}],b={toc:d};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available."),Object(o.b)("h2",{id:"initial-setup"},"Initial Setup"),Object(o.b)("p",null,"Installing Sonarr is easy. Simply issue the following command from SSH:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash",metastring:"main",main:!0}),"sudo box install sonarr\n")),Object(o.b)("p",null,"This command will configure sonarr for your user. Sonarr is installed via an apt repository, thus the easiest way to keep it up to date is by issuing the command ",Object(o.b)("inlineCode",{parentName:"p"},"apt update && apt upgrade"),". The sonarr base files will be located in ",Object(o.b)("inlineCode",{parentName:"p"},"/opt/nzbdrone")),Object(o.b)("h2",{id:"how-to-access"},"How to Access"),Object(o.b)("p",null,"Once setup, sonarr will be available at the link ",Object(o.b)("inlineCode",{parentName:"p"},"https://<hostname.ltd>/sonarr")),Object(o.b)("h2",{id:"service-management"},"Service Management"),Object(o.b)("p",null,"Service status for sonarr is handled by systemd. Despite the service being enabled for multi-user usage, Sonarr itself has not been configured for usage on more than one user account with swizzin. Regardless, as a multi-user service, you must append the username of the service you need to modify follow the ",Object(o.b)("inlineCode",{parentName:"p"},"@")," sign. The systemd service file resides at"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash",metastring:"main",main:!0}),"/etc/systemd/system/sonarr@.service\n")),Object(o.b)(i.default,{service:"sonarr@<username>",mdxType:"SystemdTabs"}),Object(o.b)("h2",{id:"configuration"},"Configuration"),Object(o.b)("p",null,"Out of the box, Sonarr comes with very little configuration. Following are some basic tasks to help get your client up and running:"),Object(o.b)("h3",{id:"add-a-new-show-and-your-first-root-directory"},"Add a new show (and your first root directory)"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"At the top, click series."),Object(o.b)("li",{parentName:"ol"},"Click the button ",Object(o.b)("inlineCode",{parentName:"li"},"+ Add Series")),Object(o.b)("li",{parentName:"ol"},"Type the name of the show you want to add"),Object(o.b)("li",{parentName:"ol"},"Under ",Object(o.b)("inlineCode",{parentName:"li"},"Path"),", choose ",Object(o.b)("inlineCode",{parentName:"li"},"Add a new path"),". Enter the path for the folder you wish to add your Sonarr shows to and click the green check-mark to add the directory.")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"e.g. ",Object(o.b)("inlineCode",{parentName:"li"},'"/home/<username>/media/TV Shows"'))),Object(o.b)("ol",{start:5},Object(o.b)("li",{parentName:"ol"},"Change the other settings to your own needs"),Object(o.b)("li",{parentName:"ol"},"Click the green + to add the show.")),Object(o.b)("h3",{id:"connect-download-clients"},"Connect download clients"),Object(o.b)(s.default,{mdxType:"Conn4Arrs"}),Object(o.b)("h3",{id:"add-an-indexer-with-jackett"},"Add an indexer with Jackett"),Object(o.b)("p",null,"Sonarr only supports a few trackers out of the box, but the indexers can be expanded by using the application ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/applications/jackett"}),"Jackett"),". To add an indexer with Jackett, use the following steps."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"By default, when receiving the torznab feed from Jackett, it will need to be modified to be connected with the application. The default link looks like:"),Object(o.b)("pre",{parentName:"div"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-plaintext"}),"https://<yourhostname.ltd>/jackett/api/v2.0/indexers/yourtracker/results/torznab/\n")),Object(o.b)("p",{parentName:"div"},"We need to edit this link to ",Object(o.b)("strong",{parentName:"p"},"remove https")," and ",Object(o.b)("strong",{parentName:"p"},"add the port number"),". Thus, if your port number was ",Object(o.b)("inlineCode",{parentName:"p"},"12345"),", your edited URL would look like this:"),Object(o.b)("pre",{parentName:"div"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-plaintext"}),"http://<yourhostname.ltd>:12345/jackett/api/v2.0/indexers/yourtracker/results/torznab/\n")))),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Go to ",Object(o.b)("inlineCode",{parentName:"li"},"Settings > Indexers")," and click ",Object(o.b)("inlineCode",{parentName:"li"},"+")," to add a new indexer."),Object(o.b)("li",{parentName:"ol"},"Under ",Object(o.b)("inlineCode",{parentName:"li"},"Torrent")," choose ",Object(o.b)("inlineCode",{parentName:"li"},"Torznab")),Object(o.b)("li",{parentName:"ol"},"Use the settings:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-plaintext",metastring:"main",main:!0}),"Name: <tracker name>\nURL: <click copy torznab feed in jackett and modify as per above>\nAPI: <copy and paste from jackett UI>\n")),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},"Click ",Object(o.b)("inlineCode",{parentName:"li"},"Test"),". If all is good, click ",Object(o.b)("inlineCode",{parentName:"li"},"Save"),".")),Object(o.b)("h3",{id:"other-tasks"},"Other tasks"),Object(o.b)("p",null,"You may wish to further alter your setup by setting quality profiles or setting up post-processing so that media is automatically transferred to your Sonarr library when your torrents are completed. If you need further help, you can refer to the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Sonarr/Sonarr/wiki"}),"Sonarr Wiki"),"."),Object(o.b)("h2",{id:"switching-between-v2-and-v3"},"Switching between v2 and v3"),Object(o.b)("h3",{id:"upgrading-to-sonarr-v3"},"Upgrading to Sonarr v3"),Object(o.b)("p",null,"You can upgrade to Sonarr v3 by running either ",Object(o.b)("inlineCode",{parentName:"p"},"box install sonarrv3")," or ",Object(o.b)("inlineCode",{parentName:"p"},"box upgrade sonarr")," (They do the exact same thing). Please check ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/applications/sonarrv3#migrating-from-v2"}),"the migration chapter")," for more information."),Object(o.b)("h3",{id:"downgrading-from-sonarr-v3"},"Downgrading from Sonarr v3"),Object(o.b)("p",null,"Like above, please check ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/applications/sonarrv3#downgrading-to-v2"}),"the downgrading chapter")," in v3 docs for more information."))}u.isMDXComponent=!0}}]);